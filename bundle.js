(()=>{"use strict";var n={514:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,":root {\n  --accent-color: #d500f9;\n}\n\n#loading-container {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  z-index: 999;\n}\n\n#loading-ring {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 150px;\n  height: 150px;\n  background: transparent;\n  border: 3px solid #3c3c3c;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 150px;\n  font-family: sans-serif;\n  font-size: 20px;\n  color: var(--accent-color);\n  letter-spacing: 4px;\n  text-transform: uppercase;\n  text-shadow: 0 0 10px var(--accent-color);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n}\n#loading-ring:before {\n  content: '';\n  position: absolute;\n  top: -3px;\n  left: -3px;\n  width: 100%;\n  height: 100%;\n  border: 3px solid transparent;\n  border-top: 3px solid var(--accent-color);\n  border-right: 3px solid var(--accent-color);\n  border-radius: 50%;\n  animation: animateC 2s linear infinite;\n}\n#loading-span {\n  display: block;\n  position: absolute;\n  top: calc(50% - 2px);\n  left: 50%;\n  width: 50%;\n  height: 4px;\n  background: transparent;\n  transform-origin: left;\n  animation: animate 2s linear infinite;\n}\n#loading-span:before {\n  content: '';\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: var(--accent-color);\n  top: -6px;\n  right: -8px;\n  box-shadow: 0 0 20px var(--accent-color);\n}\n@keyframes animateC {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes animate {\n  0% {\n    transform: rotate(45deg);\n  }\n  100% {\n    transform: rotate(405deg);\n  }\n}\n","",{version:3,sources:["webpack://./src/loading.css"],names:[],mappings:"AAAA;EACE,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,MAAM;EACN,QAAQ;EACR,SAAS;EACT,8BAA8B;EAC9B,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,yBAAyB;EACzB,kBAAkB;EAClB,kBAAkB;EAClB,kBAAkB;EAClB,uBAAuB;EACvB,eAAe;EACf,0BAA0B;EAC1B,mBAAmB;EACnB,yBAAyB;EACzB,yCAAyC;EACzC,uCAAuC;AACzC;AACA;EACE,WAAW;EACX,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,WAAW;EACX,YAAY;EACZ,6BAA6B;EAC7B,yCAAyC;EACzC,2CAA2C;EAC3C,kBAAkB;EAClB,sCAAsC;AACxC;AACA;EACE,cAAc;EACd,kBAAkB;EAClB,oBAAoB;EACpB,SAAS;EACT,UAAU;EACV,WAAW;EACX,uBAAuB;EACvB,sBAAsB;EACtB,qCAAqC;AACvC;AACA;EACE,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,+BAA+B;EAC/B,SAAS;EACT,WAAW;EACX,wCAAwC;AAC1C;AACA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF;AACA;EACE;IACE,wBAAwB;EAC1B;EACA;IACE,yBAAyB;EAC3B;AACF",sourcesContent:[":root {\n  --accent-color: #d500f9;\n}\n\n#loading-container {\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  z-index: 999;\n}\n\n#loading-ring {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 150px;\n  height: 150px;\n  background: transparent;\n  border: 3px solid #3c3c3c;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 150px;\n  font-family: sans-serif;\n  font-size: 20px;\n  color: var(--accent-color);\n  letter-spacing: 4px;\n  text-transform: uppercase;\n  text-shadow: 0 0 10px var(--accent-color);\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n}\n#loading-ring:before {\n  content: '';\n  position: absolute;\n  top: -3px;\n  left: -3px;\n  width: 100%;\n  height: 100%;\n  border: 3px solid transparent;\n  border-top: 3px solid var(--accent-color);\n  border-right: 3px solid var(--accent-color);\n  border-radius: 50%;\n  animation: animateC 2s linear infinite;\n}\n#loading-span {\n  display: block;\n  position: absolute;\n  top: calc(50% - 2px);\n  left: 50%;\n  width: 50%;\n  height: 4px;\n  background: transparent;\n  transform-origin: left;\n  animation: animate 2s linear infinite;\n}\n#loading-span:before {\n  content: '';\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  background: var(--accent-color);\n  top: -6px;\n  right: -8px;\n  box-shadow: 0 0 20px var(--accent-color);\n}\n@keyframes animateC {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes animate {\n  0% {\n    transform: rotate(45deg);\n  }\n  100% {\n    transform: rotate(405deg);\n  }\n}\n"],sourceRoot:""}]);const A=i},426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"body * {\n  font-family: sans-serif;\n}\n\nbody {\n  background: #212121;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n#title {\n  font-size: 3em;\n  text-align: center;\n  color: white;\n  margin-top: 80px;\n  margin-bottom: 80px;\n}\n\n#search-form {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\n\n#search-label {\n  font-size: 1.2em;\n  color: white;\n}\n\n#search-input {\n  text-align: center;\n  font-size: 1.2em;\n}\n\n#submit-btn {\n  font-size: 1.2em;\n}\n\n#weather-container {\n  width: 450px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #4527a0;\n  color: white;\n  font-size: 1.1em;\n  margin-top: 40px;\n  position: relative;\n}\n\n.info {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.info-container {\n  display: flex;\n  align-self: flex-start;\n}\n\n.weather-label {\n  font-weight: bold;\n  width: 140px;\n}\n\n.location-container {\n  align-items: center;\n  text-align: center;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,YAAY;EACZ,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,SAAS;EACT,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,yBAAyB;EACzB,YAAY;EACZ,gBAAgB;EAChB,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,kBAAkB;AACpB",sourcesContent:["body * {\n  font-family: sans-serif;\n}\n\nbody {\n  background: #212121;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n#title {\n  font-size: 3em;\n  text-align: center;\n  color: white;\n  margin-top: 80px;\n  margin-bottom: 80px;\n}\n\n#search-form {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0px;\n  margin-bottom: 0px;\n}\n\n#search-label {\n  font-size: 1.2em;\n  color: white;\n}\n\n#search-input {\n  text-align: center;\n  font-size: 1.2em;\n}\n\n#submit-btn {\n  font-size: 1.2em;\n}\n\n#weather-container {\n  width: 450px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #4527a0;\n  color: white;\n  font-size: 1.1em;\n  margin-top: 40px;\n  position: relative;\n}\n\n.info {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.info-container {\n  display: flex;\n  align-self: flex-start;\n}\n\n.weather-label {\n  font-weight: bold;\n  width: 140px;\n}\n\n.location-container {\n  align-items: center;\n  text-align: center;\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],l=a[s]||0,u="".concat(s," ").concat(l);a[s]=l+1;var p=t(u),d={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(d);else{var C=r(d,o);o.byIndex=A,e.splice(A,0,{identifier:u,updater:C,references:1})}i.push(u)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=o(n,r),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{class n{constructor(n,e,t,o,r,a,i,A,c,s){this.country=n,this.name=e,this.region=t,this.temperatureF=o,this.temperatureC=r,this.feelsLikeF=a,this.feelsLikeC=i,this.humidity=A,this.windMPH=c,this.localTime=s}}var e=t(379),o=t.n(e),r=t(795),a=t.n(r),i=t(569),A=t.n(i),c=t(565),s=t.n(c),l=t(216),u=t.n(l),p=t(589),d=t.n(p),C=t(426),f={};f.styleTagTransform=d(),f.setAttributes=s(),f.insert=A().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=u(),o()(C.Z,f),C.Z&&C.Z.locals&&C.Z.locals;var m=t(514),B={};B.styleTagTransform=d(),B.setAttributes=s(),B.insert=A().bind(null,"head"),B.domAPI=a(),B.insertStyleElement=u(),o()(m.Z,B),m.Z&&m.Z.locals&&m.Z.locals;const E=new class{constructor(n="406b5109515c45a0839222558241801"){this.apiKey=n}async getCurrentWeather(e){const t=`https://api.weatherapi.com/v1/current.json?key=${this.apiKey}&q=${e}`;try{const e=await fetch(t);if(e.ok){const t=await e.json(),o=new n;return o.country=t.location.country,o.name=t.location.name,o.region=t.location.region,o.temperatureF=t.current.temp_f,o.temperatureC=t.current.temp_c,o.feelsLikeF=t.current.feelslike_f,o.feelsLikeC=t.current.feelslike_c,o.humidity=t.current.humidity,o.windMPH=t.current.wind_mph,o.localTime=new Date(1e3*t.location.localtime_epoch).toLocaleString("en-US",{day:"numeric",month:"short",year:"numeric",hour:"numeric",minute:"2-digit"}),o}return console.error("Error:",e.status),null}catch(n){return console.error("Error:",n),null}}async getCurrentWeatherByCoords(n,e){return this.getCurrentWeather(`${n},${e}`)}};let g=new n;function h(n){const e=document.querySelector("#location"),t=document.querySelector("#date"),o=document.querySelector("#temperature"),r=document.querySelector("#feels-like"),a=document.querySelector("#humidity"),i=document.querySelector("#wind");e.textContent=`${n.name}, ${n.region}`,t.textContent=n.localTime,o.textContent=`${n.temperatureF}°F`,r.textContent=`${n.feelsLikeF}°F`,a.textContent=`${n.humidity}%`,i.textContent=`${n.windMPH} mph`,y(!0)}function x(n){document.querySelector("#loading-container").style.visibility=n?"visible":"hidden"}function y(n=!0){const e=n?"visible":"hidden";for(const n of document.querySelectorAll(".weather-label"))n.style.visibility=e}!function(){const n=document.querySelector("#search-form"),e=document.querySelector("#search-input");n.addEventListener("submit",(async n=>{n.preventDefault(),x(!0),g=await E.getCurrentWeather(e.value),x(!1),g?h(g):console.log("No Weather Data")})),y(!1),function(){const n=document.querySelector("#location");"geolocation"in navigator?navigator.geolocation.getCurrentPosition((async n=>{x(!0);const e=await E.getCurrentWeatherByCoords(n.coords.latitude,n.coords.longitude);x(!1),h(e)})):n.textContent="No GeoLocation"}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,